/*
 * This file was automatically generated by EvoSuite
 * Sun May 24 17:02:46 GMT 2020
 */

package ElevatorSystem;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ElevatorSystem.Elevator;
import ElevatorSystem.Environment;
import ElevatorSystem.Floor;
import ElevatorSystem.Person;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Elevator_ESTest extends Elevator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Environment environment0 = new Environment(1543);
      Elevator elevator0 = new Elevator(environment0, false, 1, false);
      elevator0.getCurrentDirection();
      Person person0 = new Person("", 1504, 1518, 1532, environment0);
      elevator0.leaveElevator(person0);
      Elevator.DoorState.values();
      elevator0.isExecutiveFloorCalling();
      elevator0.leaveElevator(person0);
      elevator0.timeShift();
      elevator0.timeShift();
      Person person1 = null;
      try {
        person1 = new Person("T\"_Ld4w", 1, (-1), (-1), environment0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Environment environment0 = new Environment(858);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.currentFloorID = 858;
      Elevator.DoorState elevator_DoorState0 = Elevator.DoorState.open;
      environment0.floors = null;
      elevator0.doors = elevator_DoorState0;
      elevator0.isEmpty();
      elevator0.getCurrentFloorID();
      elevator0.getCurrentDirection();
      Floor[] floorArray0 = new Floor[9];
      int int0 = (-2871);
      // Undeclared exception!
      try { 
        elevator0.isIdle();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Environment environment0 = new Environment(1543);
      int int0 = 15;
      Elevator elevator0 = new Elevator(environment0, false, 15, false);
      Elevator.DoorState elevator_DoorState0 = Elevator.DoorState.close;
      elevator0.doors = elevator_DoorState0;
      elevator0.getCurrentDirection();
      Elevator.DoorState.values();
      elevator0.isExecutiveFloorCalling();
      elevator0.timeShift();
      Floor[] floorArray0 = new Floor[2];
      Floor floor0 = new Floor(environment0, 1515);
      floorArray0[0] = floor0;
      Environment environment1 = null;
      try {
        environment1 = new Environment((-146));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Environment environment0 = new Environment(677);
      Floor[] floorArray0 = new Floor[2];
      Floor floor0 = new Floor(environment0, (-1));
      floorArray0[0] = floor0;
      Elevator elevator0 = new Elevator(environment0, true, 0, false);
      elevator0.timeShift();
      floor0.processWaitingPersons(elevator0);
      floor0.callElevator();
      Floor floor1 = new Floor(environment0, 677);
      environment0.floors = floorArray0;
      floorArray0[1] = floor1;
      environment0.floors = floorArray0;
      floor1.getFloorID();
      environment0.floors = floorArray0;
      Elevator elevator1 = new Elevator(environment0, false);
      elevator1.currentFloorID = 0;
      Person person0 = new Person("O&*lK.ts>E?=M{w_\"tz", (-1), 0, (-1964), environment0);
      elevator1.leaveElevator(person0);
      elevator1.isEmpty();
      // Undeclared exception!
      try { 
        Elevator.DoorState.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant ElevatorSystem.Elevator.DoorState.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, true, 0, true);
      Floor[] floorArray0 = new Floor[7];
      Floor floor0 = new Floor(environment0, 0);
      floorArray0[0] = floor0;
      Floor floor1 = new Floor(environment0, 0);
      floorArray0[1] = floor1;
      Floor floor2 = new Floor(environment0, 0);
      environment0.floors = floorArray0;
      floorArray0[2] = floor2;
      Floor floor3 = new Floor(environment0, 0);
      floorArray0[3] = floor3;
      Floor floor4 = environment0.getFloor(0);
      floorArray0[4] = floor4;
      Floor floor5 = environment0.getFloor(0);
      floorArray0[5] = floor5;
      Floor floor6 = new Floor(environment0, 0);
      environment0.floors = floorArray0;
      // Undeclared exception!
      try { 
        elevator0.isIdle();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, true, 0, true);
      Floor[] floorArray0 = new Floor[7];
      Floor floor0 = new Floor(environment0, 0);
      floorArray0[0] = floor0;
      Floor floor1 = new Floor(environment0, 0);
      floorArray0[1] = floor1;
      Floor floor2 = new Floor(environment0, 0);
      environment0.floors = floorArray0;
      floorArray0[2] = floor2;
      Floor floor3 = new Floor(environment0, 0);
      floorArray0[3] = floor3;
      elevator0.getCurrentDirection();
      Floor floor4 = environment0.getFloor(0);
      floorArray0[4] = floor4;
      Floor floor5 = environment0.getFloor(0);
      floorArray0[5] = floor5;
      Floor floor6 = new Floor(environment0, 0);
      floorArray0[6] = floor6;
      environment0.floors = floorArray0;
      Person person0 = new Person("ElevatorSystem.Environment", (-640), 0, (-640), environment0);
      person0.leaveElevator();
      elevator0.leaveElevator(person0);
      elevator0.isIdle();
      // Undeclared exception!
      try { 
        elevator0.enterElevator(person0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -640
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Environment environment0 = new Environment(1543);
      int int0 = 1;
      Elevator elevator0 = new Elevator(environment0, false, 1, false);
      elevator0.timeShift();
      Elevator.DoorState elevator_DoorState0 = Elevator.DoorState.close;
      elevator0.doors = elevator_DoorState0;
      elevator0.getCurrentDirection();
      Elevator.DoorState.values();
      elevator0.isExecutiveFloorCalling();
      // Undeclared exception!
      elevator0.timeShift();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Environment environment0 = new Environment(1502);
      boolean boolean0 = false;
      int int0 = 0;
      boolean boolean1 = false;
      int int1 = (-2235);
      Floor floor0 = new Floor(environment0, (-2235));
      Elevator elevator0 = new Elevator(environment0, false, 0, false);
      elevator0.buttonForFloorIsPressed(857);
      // Undeclared exception!
      try { 
        environment0.getFloor((-2235));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2235
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Environment environment0 = new Environment(1543);
      Elevator elevator0 = new Elevator(environment0, false, 1, false);
      Elevator.DoorState elevator_DoorState0 = Elevator.DoorState.close;
      elevator0.doors = elevator_DoorState0;
      elevator0.getCurrentDirection();
      Elevator.DoorState.values();
      elevator0.isExecutiveFloorCalling();
      elevator0.timeShift();
      boolean[] booleanArray0 = new boolean[6];
      elevator0.toString();
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      elevator0.floorButtons = booleanArray0;
      Person person0 = null;
      try {
        person0 = new Person("T\"_Ld4w", 1, (-1), (-1), environment0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Environment environment0 = new Environment(113);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.timeShift();
      elevator0.toString();
      elevator0.isExecutiveFloorCalling();
      elevator0.isExecutiveFloorCalling();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 0;
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = new Floor[8];
      Floor floor0 = new Floor(environment0, 0);
      Elevator elevator0 = new Elevator(environment0, false, 0, true);
      elevator0.isBlocked();
      floorArray0[0] = floor0;
      Floor floor1 = new Floor(environment0, 0);
      floorArray0[1] = floor1;
      environment0.floors = floorArray0;
      elevator0.areDoorsOpen();
      elevator0.isExecutiveFloor(0);
      floorArray0[2] = floor0;
      Floor floor2 = new Floor(environment0, 0);
      floorArray0[3] = floor2;
      int int1 = 773;
      Floor floor3 = new Floor(environment0, 773);
      floorArray0[4] = floor3;
      Floor floor4 = environment0.getFloor(0);
      environment0.floors = floorArray0;
      floorArray0[5] = floor4;
      Environment environment1 = null;
      try {
        environment1 = new Environment((-2214));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Environment environment0 = new Environment(4);
      Elevator elevator0 = new Elevator(environment0, true);
      Elevator.DoorState elevator_DoorState0 = Elevator.DoorState.open;
      elevator0.doors = elevator_DoorState0;
      elevator0.toString();
      Floor[] floorArray0 = new Floor[1];
      environment0.floors = floorArray0;
      elevator0.pressInLiftFloorButton(0);
      // Undeclared exception!
      try { 
        elevator0.isExecutiveFloorCalling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Environment environment0 = new Environment(2);
      Floor[] floorArray0 = new Floor[3];
      Floor floor0 = new Floor(environment0, 2);
      floorArray0[0] = floor0;
      Floor floor1 = new Floor(environment0, 0);
      floorArray0[1] = floor1;
      Floor floor2 = new Floor(environment0, 0);
      floorArray0[2] = floor2;
      environment0.floors = floorArray0;
      Elevator elevator0 = new Elevator(environment0, false, (-1), true);
      elevator0.getCurrentDirection();
      elevator0.getCurrentFloorID();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 3258;
      Environment environment0 = new Environment(3258);
      Elevator elevator0 = new Elevator(environment0, false);
      elevator0.floorButtons = null;
      elevator0.isExecutiveFloorCalling();
      // Undeclared exception!
      try { 
        elevator0.timeShift();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Environment environment0 = new Environment(588);
      Elevator elevator0 = new Elevator(environment0, false);
      elevator0.timeShift();
      Elevator.Direction elevator_Direction0 = Elevator.Direction.down;
      Floor[] floorArray0 = new Floor[7];
      // Undeclared exception!
      try { 
        environment0.getFloor(588);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 588
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 1;
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, false);
      elevator0.executiveFloor = 1;
      elevator0.timeShift();
      Floor[] floorArray0 = new Floor[8];
      int int1 = 0;
      Floor floor0 = environment0.getFloor(0);
      floorArray0[0] = floor0;
      Floor floor1 = new Floor(environment0, 0);
      floorArray0[1] = floor1;
      int int2 = 0;
      Floor floor2 = environment0.getFloor(0);
      floorArray0[2] = floor2;
      // Undeclared exception!
      try { 
        environment0.getFloor(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.isIdle();
      elevator0.verbose = true;
      Floor[] floorArray0 = new Floor[2];
      int int0 = 2;
      Floor floor0 = new Floor(environment0, 2);
      floor0.reset();
      floorArray0[0] = floor0;
      floor0.processWaitingPersons(elevator0);
      elevator0.executiveFloor = 0;
      Floor floor1 = new Floor(environment0, 0);
      floorArray0[1] = floor1;
      environment0.floors = floorArray0;
      elevator0.isExecutiveFloor(4);
      environment0.floors = floorArray0;
      // Undeclared exception!
      try { 
        Elevator.Direction.valueOf("M{9442");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant ElevatorSystem.Elevator.Direction.M{9442
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, false);
      elevator0.getCurrentFloorID();
      elevator0.isIdle();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 0;
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = new Floor[0];
      environment0.floors = floorArray0;
      Elevator elevator0 = new Elevator(environment0, true, 0, true);
      Person person0 = null;
      // Undeclared exception!
      try { 
        elevator0.enterElevator((Person) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Environment environment0 = new Environment(4);
      Elevator elevator0 = new Elevator(environment0, true);
      Elevator.DoorState elevator_DoorState0 = Elevator.DoorState.open;
      elevator0.doors = elevator_DoorState0;
      elevator0.toString();
      Floor[] floorArray0 = new Floor[1];
      Floor floor0 = new Floor(environment0, 1);
      floorArray0[0] = floor0;
      environment0.floors = floorArray0;
      elevator0.pressInLiftFloorButton(0);
      elevator0.getEnv();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Environment environment0 = new Environment(212);
      Elevator elevator0 = new Elevator(environment0, false, 212, false);
      elevator0.toString();
      elevator0.getCurrentFloorID();
      Environment environment1 = elevator0.getEnv();
      Person person0 = null;
      try {
        person0 = new Person("Elevator [_] at 212 heading down", 212, 212, 2, environment1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 212
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 1782;
      Environment environment0 = new Environment(1782);
      Elevator elevator0 = new Elevator(environment0, false, 1782, true);
      // Undeclared exception!
      try { 
        elevator0.timeShift();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1782
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Environment environment0 = new Environment(431);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.isBlocked();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Environment environment0 = new Environment(521);
      Elevator elevator0 = new Elevator(environment0, false);
      elevator0.getEnv();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, false);
      elevator0.leaveElevator((Person) null);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Elevator.DoorState.values();
      Environment environment0 = new Environment(1280);
      Elevator elevator0 = new Elevator(environment0, false, (-1), false);
      Person person0 = new Person("", (-1), 0, 5653, environment0);
      // Undeclared exception!
      try { 
        elevator0.enterElevator(person0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5653
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 0;
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, false, 0, false);
      // Undeclared exception!
      try { 
        elevator0.pressInLiftFloorButton(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, true, 158, true);
      elevator0.executiveFloor = 0;
      elevator0.env = environment0;
      Elevator.DoorState elevator_DoorState0 = Elevator.DoorState.open;
      elevator0.doors = elevator_DoorState0;
      // Undeclared exception!
      try { 
        elevator0.buttonForFloorIsPressed(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Elevator.Direction.values();
      Environment environment0 = new Environment(133);
      environment0.floors = null;
      Elevator elevator0 = null;
      try {
        elevator0 = new Elevator(environment0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Elevator.Direction elevator_Direction0 = Elevator.Direction.up;
      Elevator.Direction elevator_Direction1 = elevator_Direction0.reverse();
      elevator_Direction1.reverse();
      Environment environment0 = new Environment(2305);
      Elevator elevator0 = new Elevator(environment0, true, 848, true);
      elevator0.buttonForFloorIsPressed(811);
      Environment environment1 = new Environment(1888);
      Person person0 = new Person("", 818, 811, 811, environment1);
      elevator0.enterElevator(person0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Elevator.DoorState.values();
      int int0 = 0;
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.isEmpty();
      Floor[] floorArray0 = new Floor[2];
      // Undeclared exception!
      try { 
        environment0.getFloor(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Environment environment0 = new Environment(2);
      Elevator elevator0 = new Elevator(environment0, false, 1, false);
      elevator0.timeShift();
      elevator0.isEmpty();
      Person person0 = new Person("A<)]8c=--k,rS}2", 0, 0, 0, environment0);
      elevator0.enterElevator(person0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, true, 0, false);
      elevator0.toString();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Environment environment0 = new Environment(2727);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.areDoorsOpen();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Environment environment0 = new Environment(1016);
      Elevator elevator0 = new Elevator(environment0, false);
      elevator0.isIdle();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, false, 0, false);
      elevator0.isIdle();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Environment environment0 = null;
      Elevator elevator0 = null;
      try {
        elevator0 = new Elevator((Environment) null, true, 0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Elevator.Direction.values();
      Elevator.DoorState.values();
      Elevator.Direction.values();
      Environment environment0 = new Environment(1498);
      Elevator elevator0 = new Elevator(environment0, false);
      boolean[] booleanArray0 = new boolean[16];
      booleanArray0[0] = false;
      elevator0.floorButtons = booleanArray0;
      elevator0.isBlocked();
      Environment environment1 = new Environment(1283);
      // Undeclared exception!
      try { 
        Elevator.Direction.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant ElevatorSystem.Elevator.Direction.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Elevator.DoorState.values();
      Environment environment0 = new Environment(850);
      Elevator elevator0 = new Elevator(environment0, false, 850, false);
      Floor[] floorArray0 = new Floor[8];
      Floor floor0 = environment0.getFloor(1);
      floorArray0[0] = floor0;
      Floor floor1 = new Floor(environment0, 1);
      floorArray0[1] = floor1;
      Floor floor2 = new Floor(environment0, (-716));
      floorArray0[2] = floor2;
      Floor floor3 = environment0.getFloor(0);
      floorArray0[3] = floor3;
      Floor floor4 = environment0.getFloor(0);
      floorArray0[4] = floor4;
      Floor floor5 = new Floor(environment0, 837);
      floorArray0[5] = floor5;
      Floor floor6 = environment0.getFloor(813);
      floorArray0[6] = floor6;
      Environment environment1 = new Environment(0);
      Floor floor7 = new Floor(environment1, 817);
      Elevator.Direction elevator_Direction0 = Elevator.Direction.up;
      elevator0.currentHeading = elevator_Direction0;
      floorArray0[7] = floor7;
      environment0.floors = floorArray0;
      elevator0.getEnv();
      elevator0.toString();
      elevator0.isExecutiveFloor(846);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Environment environment0 = new Environment(1543);
      int int0 = 1;
      Elevator elevator0 = new Elevator(environment0, false, 1, false);
      Elevator.DoorState elevator_DoorState0 = Elevator.DoorState.close;
      elevator0.doors = elevator_DoorState0;
      elevator0.getCurrentDirection();
      Elevator.DoorState.values();
      elevator0.isExecutiveFloorCalling();
      elevator0.timeShift();
      Person person0 = null;
      try {
        person0 = new Person("T\"_Ld4w", 1, (-1), (-1), environment0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Environment environment0 = new Environment(1543);
      Elevator elevator0 = new Elevator(environment0, false, 1, false);
      Elevator.DoorState elevator_DoorState0 = Elevator.DoorState.close;
      elevator0.doors = elevator_DoorState0;
      elevator0.getCurrentDirection();
      Elevator.DoorState.values();
      elevator0.isExecutiveFloorCalling();
      elevator0.timeShift();
      Person person0 = null;
      try {
        person0 = new Person("T\"_Ld4w", 1, (-1), (-1), environment0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Environment environment0 = new Environment(1543);
      Elevator elevator0 = new Elevator(environment0, false, 1, false);
      Elevator.DoorState elevator_DoorState0 = Elevator.DoorState.close;
      elevator0.doors = elevator_DoorState0;
      elevator0.getCurrentDirection();
      Person person0 = new Person("", 1504, 1518, 1532, environment0);
      elevator0.leaveElevator(person0);
      Elevator.DoorState.values();
      elevator0.isExecutiveFloorCalling();
      elevator0.timeShift();
      Person person1 = null;
      try {
        person1 = new Person("T\"_Ld4w", 1, (-1), (-1), environment0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Environment environment0 = new Environment(858);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.currentFloorID = 858;
      Elevator.DoorState elevator_DoorState0 = Elevator.DoorState.open;
      elevator0.doors = elevator_DoorState0;
      elevator0.isEmpty();
      elevator0.getCurrentFloorID();
      elevator0.getCurrentDirection();
      Floor[] floorArray0 = new Floor[9];
      elevator0.isIdle();
      elevator0.areDoorsOpen();
      // Undeclared exception!
      try { 
        environment0.getFloor((-2871));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2871
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, true, 0, true);
      Floor[] floorArray0 = new Floor[7];
      Floor floor0 = new Floor(environment0, 0);
      floorArray0[0] = floor0;
      Floor floor1 = new Floor(environment0, 0);
      floorArray0[1] = floor1;
      Floor floor2 = new Floor(environment0, 0);
      environment0.floors = floorArray0;
      floorArray0[2] = floor2;
      Floor floor3 = new Floor(environment0, 0);
      floorArray0[3] = floor3;
      elevator0.getCurrentDirection();
      Floor floor4 = environment0.getFloor(0);
      floorArray0[4] = floor4;
      Floor floor5 = environment0.getFloor(0);
      floorArray0[5] = floor5;
      Floor floor6 = new Floor(environment0, 0);
      floorArray0[6] = floor6;
      environment0.floors = floorArray0;
      floor5.processWaitingPersons(elevator0);
      Person person0 = new Person("ElevatorSystem.Environment", (-640), 0, (-640), environment0);
      person0.leaveElevator();
      elevator0.leaveElevator(person0);
      elevator0.isIdle();
      // Undeclared exception!
      try { 
        elevator0.enterElevator(person0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -640
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Environment environment0 = new Environment(677);
      Floor[] floorArray0 = new Floor[2];
      Floor floor0 = new Floor(environment0, (-1));
      floorArray0[0] = floor0;
      Elevator elevator0 = new Elevator(environment0, true, 0, false);
      floor0.processWaitingPersons(elevator0);
      floor0.callElevator();
      Floor floor1 = new Floor(environment0, 677);
      environment0.floors = floorArray0;
      floorArray0[1] = floor1;
      environment0.floors = floorArray0;
      floor1.getFloorID();
      environment0.floors = floorArray0;
      Elevator elevator1 = new Elevator(environment0, false);
      elevator1.currentFloorID = 0;
      Person person0 = new Person("O&*lK.ts>E?=M{w_\"tz", (-1), 0, (-1964), environment0);
      elevator1.leaveElevator(person0);
      elevator1.isEmpty();
      // Undeclared exception!
      try { 
        Elevator.DoorState.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant ElevatorSystem.Elevator.DoorState.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = 0;
      Floor[] floorArray0 = new Floor[9];
      int int1 = 0;
      Environment environment0 = new Environment(0);
      Floor floor0 = new Floor(environment0, 0);
      floorArray0[0] = floor0;
      // Undeclared exception!
      try { 
        environment0.getFloor(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }
}
