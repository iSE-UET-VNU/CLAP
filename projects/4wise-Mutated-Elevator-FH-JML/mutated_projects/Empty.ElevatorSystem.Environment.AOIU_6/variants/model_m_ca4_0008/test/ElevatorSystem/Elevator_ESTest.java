/*
 * This file was automatically generated by EvoSuite
 * Sun May 24 16:44:58 GMT 2020
 */

package ElevatorSystem;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ElevatorSystem.Elevator;
import ElevatorSystem.Environment;
import ElevatorSystem.Floor;
import ElevatorSystem.Person;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Elevator_ESTest extends Elevator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Environment environment0 = new Environment(2);
      Elevator elevator0 = new Elevator(environment0, true, 2, true);
      elevator0.getCurrentFloorID();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, true, (-3188), true);
      elevator0.getCurrentFloorID();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Floor[] floorArray0 = new Floor[3];
      environment0.floors = floorArray0;
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.buttonForFloorIsPressed(1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, false, (-793), false);
      // Undeclared exception!
      try { 
        elevator0.timeShift();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -793
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Environment environment0 = new Environment(988);
      Elevator elevator0 = new Elevator(environment0, false, 988, false);
      // Undeclared exception!
      try { 
        elevator0.pressInLiftFloorButton(988);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 988
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Floor[] floorArray0 = new Floor[18];
      environment0.floors = floorArray0;
      Elevator elevator0 = new Elevator(environment0, true);
      // Undeclared exception!
      try { 
        elevator0.isIdle();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, true);
      boolean[] booleanArray0 = new boolean[0];
      elevator0.floorButtons = booleanArray0;
      // Undeclared exception!
      try { 
        elevator0.isIdle();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Environment environment0 = new Environment(2372);
      Elevator elevator0 = new Elevator(environment0, true, 2372, true);
      // Undeclared exception!
      try { 
        elevator0.enterElevator((Person) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Environment environment0 = new Environment(5998);
      Elevator elevator0 = new Elevator(environment0, false);
      Person person0 = new Person("", 5998, 1276, (-2306), environment0);
      // Undeclared exception!
      try { 
        elevator0.enterElevator(person0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2306
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Environment environment0 = new Environment(4400);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.floorButtons = null;
      // Undeclared exception!
      try { 
        elevator0.buttonForFloorIsPressed((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Elevator elevator0 = null;
      try {
        elevator0 = new Elevator((Environment) null, false, 0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Environment environment0 = new Environment(2306);
      environment0.floors = null;
      Elevator elevator0 = null;
      try {
        elevator0 = new Elevator(environment0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, false);
      elevator0.areDoorsOpen();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, true);
      Elevator.DoorState elevator_DoorState0 = Elevator.DoorState.close;
      elevator0.doors = elevator_DoorState0;
      elevator0.areDoorsOpen();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.getCurrentFloorID();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Environment environment0 = new Environment(4005);
      Elevator elevator0 = new Elevator(environment0, false, 1058, false);
      elevator0.currentFloorID = 0;
      elevator0.timeShift();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Environment environment0 = new Environment(2);
      Elevator elevator0 = new Elevator(environment0, false, 2, true);
      elevator0.pressInLiftFloorButton(0);
      elevator0.isIdle();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, true);
      Person person0 = new Person("", 1, 0, 0, environment0);
      elevator0.isIdle();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.isIdle();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Environment environment0 = new Environment(4400);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.toString();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, false);
      elevator0.timeShift();
      elevator0.toString();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, true);
      Person person0 = new Person("", 1, 0, 0, environment0);
      elevator0.enterElevator(person0);
      elevator0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, true);
      Person person0 = new Person(";ey$u1vX^o", (-1156), 0, 2139, environment0);
      elevator0.leaveElevator(person0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Floor[] floorArray0 = new Floor[3];
      Floor floor0 = new Floor(environment0, (-1435));
      floorArray0[0] = floor0;
      Floor floor1 = new Floor(environment0, 0);
      floorArray0[1] = floor1;
      floorArray0[2] = floor1;
      environment0.floors = floorArray0;
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.timeShift();
      Person person0 = new Person(";ey$u1vX^o", (-1156), 0, 2139, environment0);
      elevator0.timeShift();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Floor[] floorArray0 = new Floor[3];
      Floor floor0 = new Floor(environment0, (-1435));
      floorArray0[0] = floor0;
      Floor floor1 = new Floor(environment0, 0);
      floorArray0[1] = floor1;
      environment0.floors = floorArray0;
      Elevator elevator0 = new Elevator(environment0, true);
      floor1.callElevator();
      elevator0.timeShift();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Floor[] floorArray0 = new Floor[3];
      Floor floor0 = new Floor(environment0, (-1435));
      floorArray0[0] = floor0;
      floorArray0[1] = floorArray0[0];
      floorArray0[2] = floorArray0[0];
      environment0.floors = floorArray0;
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.timeShift();
      elevator0.timeShift();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.isBlocked();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, true);
      Person person0 = new Person("", 1, 0, 0, environment0);
      elevator0.timeShift();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Environment environment0 = new Environment(4379);
      Elevator elevator0 = new Elevator(environment0, true, 4379, true);
      elevator0.getCurrentDirection();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, true);
      elevator0.getEnv();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Elevator elevator0 = new Elevator(environment0, true);
      Person person0 = new Person("", 1, 0, 0, environment0);
      elevator0.enterElevator(person0);
      elevator0.timeShift();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, false);
      // Undeclared exception!
      try { 
        elevator0.buttonForFloorIsPressed(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Environment environment0 = new Environment(4005);
      Elevator elevator0 = new Elevator(environment0, false, 1058, false);
      elevator0.timeShift();
      assertEquals(1057, elevator0.getCurrentFloorID());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Elevator.Direction elevator_Direction0 = Elevator.Direction.up;
      Elevator.Direction elevator_Direction1 = elevator_Direction0.reverse();
      Elevator.Direction elevator_Direction2 = elevator_Direction1.reverse();
      assertSame(elevator_Direction2, elevator_Direction0);
  }
}
