/*
 * This file was automatically generated by EvoSuite
 * Sat May 09 18:55:12 GMT 2020
 */

package ElevatorSystem;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ElevatorSystem.Environment;
import ElevatorSystem.Floor;
import ElevatorSystem.Person;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Environment_ESTest extends Environment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Environment environment0 = new Environment(2441);
      boolean boolean0 = environment0.isTopFloor(2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Environment environment0 = new Environment(1);
      environment0.floors = null;
      Floor[] floorArray0 = environment0.getFloors();
      assertNull(floorArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = new Floor[1];
      environment0.floors = floorArray0;
      Floor[] floorArray1 = environment0.getFloors();
      assertEquals(1, floorArray1.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = new Floor[5];
      environment0.floors = floorArray0;
      Floor floor0 = environment0.getFloor(0);
      assertNull(floor0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Environment environment0 = new Environment(228);
      Floor[] floorArray0 = new Floor[1];
      Floor floor0 = new Floor(environment0, 0);
      Person person0 = new Person("", (-3407), 1, 1, environment0);
      floor0.addWaitingPerson(person0);
      floorArray0[0] = floor0;
      environment0.floors = floorArray0;
      Floor floor1 = environment0.getFloor(0);
      assertSame(floor1, floor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Environment environment0 = new Environment(228);
      Floor floor0 = environment0.getFloor(0);
      assertNotNull(floor0);
      assertEquals(0, floor0.getFloorID());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Environment environment0 = new Environment(2441);
      Floor floor0 = environment0.getFloor(1688);
      assertNotNull(floor0);
      assertEquals(1688, floor0.getFloorID());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Environment environment0 = new Environment(327);
      Floor[] floorArray0 = new Floor[4];
      Floor floor0 = new Floor(environment0, (-1465));
      floorArray0[0] = floor0;
      environment0.floors = floorArray0;
      Floor floor1 = environment0.getFloor(0);
      assertFalse(floor1.hasCall());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Environment environment0 = new Environment(0);
      environment0.floors = null;
      // Undeclared exception!
      try { 
        environment0.isTopFloor(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Environment environment0 = new Environment(5058);
      Environment environment1 = new Environment(5058);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Environment environment0 = null;
      try {
        environment0 = new Environment((-1640));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = new Floor[1];
      environment0.floors = floorArray0;
      boolean boolean0 = environment0.isTopFloor(0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Environment environment0 = new Environment(0);
      boolean boolean0 = environment0.isTopFloor(374);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Environment environment0 = new Environment(1);
      environment0.floors = null;
      // Undeclared exception!
      try { 
        environment0.getFloor(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Environment environment0 = new Environment(0);
      // Undeclared exception!
      try { 
        environment0.getFloor(5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = environment0.getFloors();
      assertEquals(0, floorArray0.length);
  }
}
