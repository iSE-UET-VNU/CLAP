/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 07:53:42 GMT 2020
 */

package main;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ElevatorSystem.Elevator;
import ElevatorSystem.Environment;
import ElevatorSystem.Person;
import main.Actions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Actions_ESTest extends Actions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Environment environment0 = new Environment(1023);
      Actions actions0 = new Actions(environment0, (Elevator) null);
      // Undeclared exception!
      try { 
        actions0.pressInLift4();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.Actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Environment environment0 = new Environment(68);
      Actions actions0 = new Actions(environment0, (Elevator) null);
      // Undeclared exception!
      try { 
        actions0.pressInLift3();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.Actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Environment environment0 = new Environment(1873);
      Actions actions0 = new Actions(environment0, (Elevator) null);
      // Undeclared exception!
      try { 
        actions0.pressInLift2();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.Actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Environment environment0 = new Environment(385);
      Actions actions0 = new Actions(environment0, (Elevator) null);
      // Undeclared exception!
      try { 
        actions0.pressInLift1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.Actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Environment environment0 = new Environment(483);
      Actions actions0 = new Actions(environment0, (Elevator) null);
      // Undeclared exception!
      try { 
        actions0.pressInLift0();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.Actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Environment environment0 = new Environment(47);
      Elevator elevator0 = new Elevator(environment0, true, 47, true);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.env = null;
      // Undeclared exception!
      try { 
        actions0.monicaCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Person", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Environment environment0 = new Environment(2351);
      Elevator elevator0 = new Elevator(environment0, true, 2351, false);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.env = null;
      // Undeclared exception!
      try { 
        actions0.chuckCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Person", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Environment environment0 = new Environment(2351);
      Elevator elevator0 = new Elevator(environment0, true, 2351, false);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.env = null;
      // Undeclared exception!
      try { 
        actions0.bobCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Person", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Environment environment0 = new Environment(1312);
      Elevator elevator0 = new Elevator(environment0, true, 1312, true);
      Actions actions0 = new Actions(environment0, elevator0);
      Environment environment1 = new Environment(3);
      actions0.env = environment1;
      // Undeclared exception!
      try { 
        actions0.bobCall();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Environment environment0 = new Environment(2057);
      Elevator elevator0 = new Elevator(environment0, false);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.env = null;
      // Undeclared exception!
      try { 
        actions0.bigMacCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Person", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Environment environment0 = new Environment(47);
      Elevator elevator0 = new Elevator(environment0, true, 47, true);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.env = null;
      // Undeclared exception!
      try { 
        actions0.angelinaCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Person", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Environment environment0 = new Environment(1283);
      Elevator elevator0 = new Elevator(environment0, false);
      Actions actions0 = new Actions(environment0, elevator0);
      Environment environment1 = new Environment(0);
      actions0.env = environment1;
      // Undeclared exception!
      try { 
        actions0.angelinaCall();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Environment environment0 = new Environment(1343);
      Elevator elevator0 = new Elevator(environment0, false);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.env = null;
      // Undeclared exception!
      try { 
        actions0.aliceCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Person", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Environment environment0 = new Environment(30);
      Elevator elevator0 = new Elevator(environment0, true, 1, true);
      Actions actions0 = new Actions(environment0, elevator0);
      Environment environment1 = new Environment(2);
      actions0.env = environment1;
      // Undeclared exception!
      try { 
        actions0.aliceCall();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Actions actions0 = null;
      try {
        actions0 = new Actions((Environment) null, (Elevator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("main.Actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Environment environment0 = new Environment(468);
      Elevator elevator0 = new Elevator(environment0, true);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.monicaCall();
      elevator0.timeShift();
      actions0.pressInLift0();
      assertFalse(elevator0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Environment environment0 = new Environment(468);
      Elevator elevator0 = new Elevator(environment0, true);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.pressInLift0();
      assertTrue(elevator0.isIdle());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Elevator elevator0 = new Elevator(environment0, false);
      Actions actions0 = null;
      try {
        actions0 = new Actions(environment0, elevator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // These Actions assume at least 5 Floors!
         //
         verifyException("main.Actions", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Environment environment0 = new Environment(468);
      Elevator elevator0 = new Elevator(environment0, true);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.monicaCall();
      elevator0.timeShift();
      actions0.pressInLift4();
      assertFalse(elevator0.isEmpty());
      assertEquals(0, elevator0.getCurrentFloorID());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Environment environment0 = new Environment(468);
      Elevator elevator0 = new Elevator(environment0, true);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.pressInLift4();
      assertTrue(elevator0.isIdle());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Environment environment0 = new Environment(33);
      Elevator elevator0 = new Elevator(environment0, true, 33, true);
      Actions actions0 = new Actions(environment0, elevator0);
      Person person0 = actions0.angelinaCall();
      elevator0.enterElevator(person0);
      actions0.pressInLift3();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Environment environment0 = new Environment(468);
      Elevator elevator0 = new Elevator(environment0, true);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.pressInLift3();
      assertTrue(elevator0.isIdle());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Environment environment0 = new Environment(468);
      Elevator elevator0 = new Elevator(environment0, true);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.monicaCall();
      elevator0.timeShift();
      actions0.pressInLift1();
      assertFalse(elevator0.isEmpty());
      assertTrue(elevator0.areDoorsOpen());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Environment environment0 = new Environment(2057);
      Elevator elevator0 = new Elevator(environment0, false);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.pressInLift1();
      assertTrue(elevator0.isIdle());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Environment environment0 = new Environment(468);
      Elevator elevator0 = new Elevator(environment0, true);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.monicaCall();
      elevator0.timeShift();
      actions0.pressInLift2();
      assertFalse(elevator0.isEmpty());
      assertTrue(elevator0.areDoorsOpen());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Environment environment0 = new Environment(2057);
      Elevator elevator0 = new Elevator(environment0, false);
      Actions actions0 = new Actions(environment0, elevator0);
      actions0.pressInLift2();
      assertTrue(elevator0.isIdle());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Environment environment0 = new Environment(1873);
      Actions actions0 = new Actions(environment0, (Elevator) null);
      Person person0 = actions0.chuckCall();
      assertEquals(40, person0.getWeight());
      assertEquals(1, person0.getOrigin());
      assertEquals("chuck", person0.getName());
      assertEquals(3, person0.getDestination());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Environment environment0 = new Environment(1023);
      Actions actions0 = new Actions(environment0, (Elevator) null);
      Person person0 = actions0.bigMacCall();
      assertEquals(3, person0.getDestination());
      assertEquals("BigMac", person0.getName());
      assertEquals(1, person0.getOrigin());
      assertEquals(150, person0.getWeight());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Environment environment0 = new Environment(1023);
      Actions actions0 = new Actions(environment0, (Elevator) null);
      Person person0 = actions0.aliceCall();
      assertEquals(0, person0.getDestination());
      assertEquals(40, person0.getWeight());
      assertEquals("alice", person0.getName());
      assertEquals(3, person0.getOrigin());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Environment environment0 = new Environment(1312);
      Elevator elevator0 = new Elevator(environment0, true, 1312, true);
      Actions actions0 = new Actions(environment0, elevator0);
      Person person0 = actions0.bobCall();
      assertEquals(4, person0.getOrigin());
      assertEquals("bob", person0.getName());
      assertEquals(40, person0.getWeight());
      assertEquals(0, person0.getDestination());
  }
}
