/*
 * This file was automatically generated by EvoSuite
 * Mon May 04 18:28:48 GMT 2020
 */

package ElevatorSystem;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ElevatorSystem.Environment;
import ElevatorSystem.Floor;
import ElevatorSystem.Person;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Environment_ESTest extends Environment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Floor[] floorArray0 = new Floor[4];
      Environment environment0 = new Environment(0);
      environment0.floors = floorArray0;
      environment0.floors = floorArray0;
      environment0.floors = floorArray0;
      environment0.getFloor(0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Environment environment0 = new Environment(1054);
      int int0 = 205;
      Floor floor0 = environment0.getFloor(205);
      Floor[] floorArray0 = new Floor[3];
      Person person0 = new Person("HCBp;24YU", 1289, 1, 0, environment0);
      floor0.addWaitingPerson(person0);
      floorArray0[0] = floor0;
      floorArray0[1] = floor0;
      floorArray0[2] = floor0;
      environment0.floors = floorArray0;
      environment0.getFloor(0);
      environment0.getFloor(0);
      environment0.getFloors();
      // Undeclared exception!
      try { 
        environment0.getFloor(1054);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1054
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Environment environment0 = new Environment(1);
      environment0.floors = null;
      environment0.getFloors();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = new Floor[1];
      Floor floor0 = new Floor(environment0, 0);
      floorArray0[0] = floor0;
      environment0.floors = floorArray0;
      environment0.floors = floorArray0;
      environment0.getFloors();
      environment0.isTopFloor(0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 2394;
      Environment environment0 = new Environment(2394);
      Floor[] floorArray0 = null;
      environment0.floors = null;
      environment0.floors = null;
      int int1 = 0;
      // Undeclared exception!
      try { 
        environment0.getFloor(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Environment environment0 = new Environment(2162);
      environment0.isTopFloor(0);
      environment0.isTopFloor(0);
      Floor[] floorArray0 = new Floor[3];
      Floor floor0 = new Floor(environment0, 0);
      floorArray0[0] = floor0;
      Floor floor1 = environment0.getFloor(0);
      floorArray0[1] = floor1;
      int int0 = 1350;
      Floor floor2 = environment0.getFloor(1350);
      floor0.reset();
      floorArray0[2] = floor2;
      environment0.floors = floorArray0;
      environment0.floors = floorArray0;
      environment0.getFloors();
      environment0.getFloors();
      environment0.floors = floorArray0;
      environment0.isTopFloor(0);
      environment0.isTopFloor((-838));
      environment0.floors = null;
      // Undeclared exception!
      try { 
        environment0.isTopFloor((-189));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Environment environment0 = new Environment(654);
      Floor floor0 = environment0.getFloor(0);
      assertNotNull(floor0);
      assertEquals(0, floor0.getFloorID());
      
      environment0.getFloors();
      boolean boolean0 = environment0.isTopFloor((-3962));
      assertFalse(boolean0);
      
      boolean boolean1 = environment0.isTopFloor(654);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Environment environment0 = new Environment(845);
      Floor floor0 = environment0.getFloor(100);
      assertNotNull(floor0);
      assertEquals(100, floor0.getFloorID());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = environment0.getFloors();
      assertEquals(0, floorArray0.length);
      
      boolean boolean0 = environment0.isTopFloor(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = (-74);
      Environment environment0 = null;
      try {
        environment0 = new Environment((-74));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 0;
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = new Floor[2];
      Environment environment1 = new Environment(1);
      int int1 = (-208);
      // Undeclared exception!
      try { 
        environment1.getFloor((-208));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -208
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Environment environment0 = new Environment(5);
      // Undeclared exception!
      try { 
        environment0.getFloor(5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = new Floor[1];
      environment0.floors = floorArray0;
      boolean boolean0 = environment0.isTopFloor(0);
      assertTrue(boolean0);
  }
}
