/*
 * This file was automatically generated by EvoSuite
 * Mon May 04 18:29:35 GMT 2020
 */

package ElevatorSystem;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ElevatorSystem.Elevator;
import ElevatorSystem.Environment;
import ElevatorSystem.Floor;
import ElevatorSystem.Person;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Person_ESTest extends Person_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Environment environment0 = new Environment(2984);
      Person person0 = new Person("", 4, 4, 4, environment0);
      Elevator elevator0 = new Elevator(environment0, false, 2984, false);
      person0.enterElevator(elevator0);
      assertEquals(4, person0.getWeight());
      assertEquals(4, person0.getDestination());
      assertFalse(person0.isDestinationReached());
      assertEquals(4, person0.getOrigin());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Person person0 = new Person("", 0, 0, (-777), environment0);
      assertFalse(person0.isDestinationReached());
      
      person0.leaveElevator();
      boolean boolean0 = person0.isDestinationReached();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Environment environment0 = new Environment(2984);
      Person person0 = new Person("", 4, 4, 4, environment0);
      int int0 = person0.getWeight();
      assertFalse(person0.isDestinationReached());
      assertEquals(4, person0.getDestination());
      assertEquals(4, person0.getOrigin());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Environment environment0 = new Environment(775);
      Person person0 = new Person("ElevatorSystem.Person", (-2045), 63, 775, environment0);
      int int0 = person0.getWeight();
      assertEquals(63, person0.getOrigin());
      assertEquals((-2045), int0);
      assertFalse(person0.isDestinationReached());
      assertEquals(775, person0.getDestination());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Environment environment0 = new Environment(2984);
      Person person0 = new Person("", 4, 4, 4, environment0);
      int int0 = person0.getOrigin();
      assertEquals(4, int0);
      assertEquals(4, person0.getDestination());
      assertFalse(person0.isDestinationReached());
      assertEquals(4, person0.getWeight());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = new Floor[3];
      Floor floor0 = new Floor(environment0, 0);
      floorArray0[0] = floor0;
      environment0.floors = floorArray0;
      Person person0 = new Person((String) null, 0, 0, 441, environment0);
      person0.getName();
      assertEquals(441, person0.getDestination());
      assertEquals(0, person0.getWeight());
      assertFalse(person0.isDestinationReached());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Environment environment0 = new Environment(2831);
      Person person0 = new Person("", 0, 0, 0, environment0);
      person0.getName();
      assertEquals(0, person0.getWeight());
      assertFalse(person0.isDestinationReached());
      assertEquals(0, person0.getDestination());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Environment environment0 = new Environment(1490);
      Person person0 = new Person("", 0, 0, 0, environment0);
      int int0 = person0.getDestination();
      assertEquals(0, int0);
      assertFalse(person0.isDestinationReached());
      assertEquals(0, person0.getWeight());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = new Floor[2];
      Floor floor0 = new Floor(environment0, 0);
      floorArray0[0] = floor0;
      environment0.floors = floorArray0;
      Person person0 = new Person("v~cyw", 0, 0, (-1), environment0);
      int int0 = person0.getDestination();
      assertEquals((-1), int0);
      assertEquals(0, person0.getWeight());
      assertFalse(person0.isDestinationReached());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Person person0 = new Person("", 0, 0, (-777), environment0);
      Elevator elevator0 = new Elevator(environment0, false, 856, false);
      // Undeclared exception!
      try { 
        person0.enterElevator(elevator0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -777
         //
         verifyException("ElevatorSystem.Elevator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Environment environment0 = new Environment(1);
      environment0.floors = null;
      Person person0 = null;
      try {
        person0 = new Person((String) null, 1315, (-133), (-133), environment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Environment environment0 = new Environment(537);
      Person person0 = null;
      try {
        person0 = new Person("kV45`MRr^7fI/", 0, (-1389), 537, environment0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1389
         //
         verifyException("ElevatorSystem.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Environment environment0 = new Environment(1);
      Person person0 = new Person("", 0, 0, (-777), environment0);
      boolean boolean0 = person0.isDestinationReached();
      assertFalse(boolean0);
      assertEquals((-777), person0.getDestination());
      assertEquals(0, person0.getWeight());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Environment environment0 = new Environment(2984);
      Person person0 = new Person("", 4, 4, 4, environment0);
      int int0 = person0.getDestination();
      assertEquals(4, person0.getWeight());
      assertEquals(4, person0.getOrigin());
      assertEquals(4, int0);
      assertFalse(person0.isDestinationReached());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Environment environment0 = new Environment(2831);
      Person person0 = new Person("", 0, 0, 0, environment0);
      int int0 = person0.getWeight();
      assertEquals(0, int0);
      assertFalse(person0.isDestinationReached());
      assertEquals(0, person0.getDestination());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Environment environment0 = new Environment(2831);
      Person person0 = new Person("", 0, 0, 0, environment0);
      // Undeclared exception!
      try { 
        person0.enterElevator((Elevator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ElevatorSystem.Person", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Environment environment0 = new Environment(2831);
      Person person0 = new Person("", 0, 0, 0, environment0);
      int int0 = person0.getOrigin();
      assertEquals(0, int0);
      assertFalse(person0.isDestinationReached());
      assertEquals(0, person0.getDestination());
      assertEquals(0, person0.getWeight());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Environment environment0 = new Environment(0);
      Floor[] floorArray0 = new Floor[11];
      Floor floor0 = new Floor(environment0, 0);
      floorArray0[0] = floor0;
      environment0.floors = floorArray0;
      Person person0 = new Person("=gM(%%IVhxd", 0, 0, 0, environment0);
      person0.getName();
      assertEquals(0, person0.getWeight());
      assertFalse(person0.isDestinationReached());
      assertEquals(0, person0.getDestination());
  }
}
