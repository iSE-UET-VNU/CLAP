/*
 * This file was automatically generated by EvoSuite
 * Mon May 04 18:07:04 GMT 2020
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PL_Interface_impl_ESTest extends PL_Interface_impl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test((-651), (-651));
      pL_Interface_impl0.Specification14();
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(2453, (-1659));
      pL_Interface_impl0.Specification13();
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.randomSequenceOfActions(0);
      pL_Interface_impl0.Specification9();
      assertFalse(pL_Interface_impl0.isAbortedRun());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test((-651), (-651));
      pL_Interface_impl0.Specification3();
      assertFalse(pL_Interface_impl0.isAbortedRun());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.start(530, (-7));
      pL_Interface_impl0.Specification2();
      assertFalse(pL_Interface_impl0.isAbortedRun());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test((-651), (-651));
      pL_Interface_impl0.Specification1();
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.modifiedrandomSequenceOfActions((-1325));
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      List<String> list0 = PL_Interface_impl.actionHistory;
      String string0 = PL_Interface_impl.listToString(list0);
      assertFalse(list0.contains(string0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = PL_Interface_impl.getIntegerMinMax(12, 12);
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = PL_Interface_impl.getIntegerMinMax((-4185), (-4185));
      assertEquals((-4185), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      PL_Interface_impl.actionHistory = null;
      // Undeclared exception!
      try { 
        pL_Interface_impl0.test((-1659), 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("PL_Interface_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      PL_Interface_impl.actionHistory = null;
      // Undeclared exception!
      try { 
        pL_Interface_impl0.randomSequenceOfActions(535);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("PL_Interface_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      PL_Interface_impl.actionHistory = pL_Interface_impl0.actionHistory;
      PL_Interface_impl.actionHistory = null;
      // Undeclared exception!
      try { 
        pL_Interface_impl0.modifiedrandomSequenceOfActions((-2462));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("PL_Interface_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        PL_Interface_impl.listToString((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("PL_Interface_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.randomSequenceOfActions(199);
      // Undeclared exception!
      pL_Interface_impl0.Specification3();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = PL_Interface_impl.getBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(12, (-1));
      assertFalse(pL_Interface_impl0.isAbortedRun());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(9, (-1));
      assertFalse(pL_Interface_impl0.isAbortedRun());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(5, (-1));
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(4, 4);
      pL_Interface_impl0.randomSequenceOfActions(12);
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.randomSequenceOfActions(12);
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      int int0 = PL_Interface_impl.getIntegerMinMax(0, 0);
      assertEquals(0, int0);
      
      pL_Interface_impl0.modifiedrandomSequenceOfActions(0);
      pL_Interface_impl0.randomSequenceOfActions(0);
      pL_Interface_impl0.test(1, 1);
      boolean boolean0 = PL_Interface_impl.getBoolean();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.Specification2();
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(0, (-1));
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.start(14, (-1));
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.start(13, (-1));
      assertFalse(pL_Interface_impl0.isAbortedRun());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(10, (-1));
      boolean boolean0 = pL_Interface_impl0.isAbortedRun();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(8, (-1));
      assertTrue(pL_Interface_impl0.isAbortedRun());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.start(7, (-1));
      assertFalse(pL_Interface_impl0.isAbortedRun());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(6, (-1));
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(4, (-1));
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.start(3, (-1));
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.start(1, (-1));
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(2453, (-1659));
      pL_Interface_impl0.modifiedrandomSequenceOfActions(0);
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.modifiedrandomSequenceOfActions(257);
      assertFalse(pL_Interface_impl0.isAbortedRun());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.modifiedrandomSequenceOfActions(9);
      pL_Interface_impl0.modifiedrandomSequenceOfActions(9);
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.randomSequenceOfActions(1);
      pL_Interface_impl0.randomSequenceOfActions(3);
      pL_Interface_impl0.modifiedrandomSequenceOfActions(0);
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      String[] stringArray0 = new String[3];
      pL_Interface_impl0.modifiedrandomSequenceOfActions(9);
      PL_Interface_impl.main(stringArray0);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.start((-7), 0);
      pL_Interface_impl0.Specification14();
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.Specification14();
      assertFalse(pL_Interface_impl0.isAbortedRun());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.Specification9();
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(2453, (-1659));
      pL_Interface_impl0.Specification9();
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.randomSequenceOfActions(1);
      pL_Interface_impl0.Specification13();
      assertFalse(pL_Interface_impl0.isAbortedRun());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.Specification13();
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.test(2, (-1));
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.start((-7), 0);
      pL_Interface_impl0.Specification2();
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.Specification1();
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.start(0, 0);
      pL_Interface_impl0.Specification1();
      assertFalse(pL_Interface_impl0.isAbortedRun());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      List<String> list0 = pL_Interface_impl0.getExecutedActions();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      boolean boolean0 = pL_Interface_impl0.isAbortedRun();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.checkOnlySpecification((-193));
      assertFalse(PL_Interface_impl.executedUnimplementedAction);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[0];
      PL_Interface_impl.main(stringArray0);
      PL_Interface_impl pL_Interface_impl0 = new PL_Interface_impl();
      pL_Interface_impl0.start(12, (-1));
      assertFalse(pL_Interface_impl0.isAbortedRun());
  }
}
